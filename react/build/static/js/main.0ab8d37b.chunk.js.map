{"version":3,"sources":["components/Title.js","components/Home.js","utility/Storage.js","constants/GameConstants.js","store/TimerStore.js","utility/DateFormatter.js","store/ScoreStore.js","store/LevelStore.js","components/Rectangle.js","components/Tiles.js","components/Play.js","components/BackButton.js","components/Statistics.js","components/Score.js","components/Scores.js","components/Options.js","components/About.js","components/GameOver.js","store/MenuStore.js","components/App.js","index.js"],"names":["Title","react_default","a","createElement","className","Home","components_Title","onClick","MenuStore","currentMenu","Storage","Object","classCallCheck","this","stats","loadStatsFromStorage","username","loadUsernameFromStorage","err","console","log","storage","window","localStorage","JSON","parse","whiteTiles","blackTiles","gamesPlayed","gamesCompleted","stringify","user","NUM_TILES_Y","TimerStore","startTime","currentTime","isRunning","Date","getTime","measure","_this","setTimeout","toFixed","decorate","observable","elapsed","computed","timerStore","formatDate","date","day","getDate","getMonth","getFullYear","ScoreStore","scores","serverAddress","mode","arguments","length","undefined","fetch","then","response","json","data","catch","time","method","headers","Content-Type","body","scoreStore","LevelStore","started","won","traversed","modeTiles","tiles","tileOffsetY","initializeTiles","y","randomNum","random","placedBlack","iteration","x","tileId","min","max","Math","floor","e","target","validClick","id","start","mouseCheckWhiteTile","endGame","startsWith","includes","code","keyCheckWhiteTile","win","stop","lose","increaseStats","pushScore","saveStatsToStorage","reset","filter","tile","screenStart","screenEnd","screenTiles","levelStore","Rectangle","props","styles","svg","display","verticalAlign","rectangle","fill","color","strokeWidth","stroke","style","width","concat","height","draggable","viewBox","mouse","defaultProps","Tiles","reverse","map","i","components_Rectangle","key","handleClick","renderTiles","Component","observer","Play","input","focus","handleKeyPress","onKeyPress","charCode","tabIndex","ref","node","components_Tiles","BackButton","retry","Statistics","totalTiles","totalPlayedGames","totalCompletedGames","components_BackButton","marginTop","Score","class","name","Scores","fetchScores","scoreArray","_ScoreStore$scores$i","push","components_Score","overflowY","paddingRight","renderScores","Options","value","saveUsernameToStorage","onChange","parseInt","type","placeholder","defaultValue","handleUserChange","About","GameOver","tilesPerSecond","components_Play","components_Options","components_About","components_Scores","components_Statistics","components_GameOver","components_Home","renderMenu","menuStore","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ab8d37b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return(\n\t\t<div className=\"Title tc f2 fw6 b\">Dubstep That Tile</div>\n  );\n}\n\nexport default Title\n","import React from 'react';\n\nimport MenuStore from '../store/MenuStore';\nimport Title from './Title';\n\nconst Home = () => {\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<Title/>\n\t\t\t<div className=\"Home__subtitle mt2 tc f3\">The Ultimate Musical Challenge</div>\n\t\t\t<ul className=\"list pl0 tc\">\n\t\t\t\t<li className=\"pa2 f4 grow hover--2\" onClick={ () => { MenuStore.currentMenu = \"play\" }}>Play</li>\n\t\t\t\t<li className=\"pa2 f4 grow hover--2\" onClick={ () => { MenuStore.currentMenu = \"options\" }}>Options</li>\n\t\t\t\t<li className=\"pa2 f4 grow hover--2\" onClick={ () => { MenuStore.currentMenu = \"scores\" }}>Scores</li>\n\t\t\t\t<li className=\"pa2 f4 grow hover--2\" onClick={ () => { MenuStore.currentMenu = \"statistics\" }}>Statistics</li>\n\t\t\t\t<li className=\"pa2 f4 grow hover--2\" onClick={ () => { MenuStore.currentMenu = \"about\" }}>About</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","/*\n* Handles the storage of different fields in the game\n*/\nclass Storage {\n\n\tconstructor(){\n\t\tthis.stats = [];\n\n\t\ttry {\n\t\t\tthis.stats = this.loadStatsFromStorage();\n\t\t\tthis.username = this.loadUsernameFromStorage();\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\t/*\n\t* Loads the stats from the local browser storage\n\t*/\n\tloadStatsFromStorage(){\n\t\t//Check if the HTML5 storage api is available\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t\t//This is the local storage object. It won't be reset by the browser upon close\n\t\t\tconst storage = window.localStorage;\n\n\t\t\t//Get the values\n\t\t\t if (storage.stats){\n\t\t\t \tconst loaded_stats = JSON.parse(storage.stats); //Get a javascript object\n\t\t\t \treturn loaded_stats;\n\t\t\t } else {\n\t\t\t\treturn {\n\t\t\t\t\twhiteTiles: 0,\n\t\t\t\t\tblackTiles: 0,\n\t\t\t\t\tgamesPlayed: 0,\n\t\t\t\t\tgamesCompleted: 0\n\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow Error(\"No HTML5 web storage found on browser\");\n\t\t}\n\t}\n\n\tloadUsernameFromStorage(){\n\t\t//Check if the HTML5 storage api is available\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t\t//This is the local storage object. It won't be reset by the browser upon close\n\t\t\tconst storage = window.localStorage;\n\n\t\t\t//Get the values\n\t\t\t if (storage.username){\n\t\t\t \treturn storage.username;\n\t\t\t } else {\n\t\t\t\treturn  \"\";\n\t\t\t}\n\t\t} else {\n\t\t\tthrow Error(\"No HTML5 web storage found on browser\");\n\t\t}\n\t}\n\n\t/*\n\t* Saves the stats to a .dat file\n\t*/\n\tsaveStatsToStorage(){\n\t\t//Check if the HTML5 storage api is available\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t\t//This is the local storage object. It won't be reset by the browser upon close\n\t\t\tconst storage = window.localStorage;\n\n\t\t\t//Create a json object\n\t\t\tstorage.stats = JSON.stringify(this.stats);\n\t\t} else {\n\t\t\tthrow Error(\"No HTML5 web storage found on browser\");\n\t\t}\n\t}\n\n\tsaveUsernameToStorage(user){\n\t\t//Check if the HTML5 storage api is available\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t\t//This is the local storage object. It won't be reset by the browser upon close\n\t\t\tconst storage = window.localStorage;\n\n\t\t\t//Create a json object\n\t\t\tstorage.username = user;\n\t\t} else {\n\t\t\tthrow Error(\"No HTML5 web storage found on browser\");\n\t\t}\n\t}\n}\nconst storage = window.storage = new Storage();\n\nexport default storage;\n","export const BLACK_TILE = 0;\nexport const WHITE_TILE = 1;\nexport const YELLOW_TILE = 2;\nexport const NUM_TILES_X = 4;\nexport const NUM_TILES_Y = 50;\nexport const NUM_TILES = NUM_TILES_X * NUM_TILES_Y;\nexport const KEY_A = 97;\nexport const KEY_S = 115;\nexport const KEY_D = 100;\nexport const KEY_F = 102;\nexport const NUM_DECIMAL_TIME = 3;\nexport const NUM_DECIMAL_TILE_SEC = 3;\n","import { NUM_DECIMAL_TIME } from '../constants/GameConstants';\nimport { computed, decorate, observable } from \"mobx\";\n\nclass TimerStore {\n\n\tconstructor(){\n\t\tthis.startTime = 0;\n\t\tthis.currentTime = 0;\n\t\tthis.isRunning = false;\n\t}\n\n\tstart(){\n\t\tthis.startTime = new Date().getTime();\n\t\tthis.isRunning = true;\n\t\tthis.measure();\n\t}\n\n\tmeasure(){\n\t\tif (!this.isRunning) return;\n\n\t\tthis.currentTime = new Date().getTime();\n\t\tsetTimeout(() => this.measure(), 10);\n\t}\n\n\tstop(){\n\t\tthis.isRunning = false;\n\t}\n\n\treset(){\n\t\tthis.startTime = 0;\n\t\tthis.currentTime = 0;\n\t}\n\n\tget elapsed(){\n\t\treturn ((this.currentTime - this.startTime) / 1000).toFixed(NUM_DECIMAL_TIME);\n\t}\n}\n\ndecorate(TimerStore, {\n\tcurrentTime: observable,\n\tstartTime: observable,\n\telapsed: computed,\n})\n\nconst timerStore = window.timerStore = new TimerStore();\n\nexport default timerStore;\n","const formatDate = () => {\n  const date = new Date();\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return (month + \"-\" + day + \"-\" + year);\n}\n\nexport default formatDate;\n","import { decorate, observable } from 'mobx';\n\nclass ScoreStore {\n\n  constructor(){\n    this.scores = [];\n    this.serverAddress = \"https://dubstep-that-tile.herokuapp.com\";\n  }\n\n  fetchScores(mode=50){\n//    console.log(\"Fetching scores. Mode\", mode);\n    fetch(this.serverAddress + '/scores?mode=' + mode)\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      this.scores = data;\n    })\n    .catch(err => console.log(err));\n  }\n\n  pushScore(date, username, time, mode){\n    if (username === '')\n      username = \"New User\";\n  //  console.log(\"Pushing score\", date, username, time, mode);\n    fetch(this.serverAddress + '/scores', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        date: date,\n        username: username,\n        time: time,\n        mode: mode\n      })\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(err => console.log(err));\n  }\n}\n\ndecorate(ScoreStore, {\n\tscores: observable\n})\n\nconst scoreStore = window.scoreStore = new ScoreStore();\n\nexport default scoreStore;\n","import { decorate, observable, computed} from \"mobx\";\n\nimport Storage from '../utility/Storage';\nimport TimerStore from '../store/TimerStore';\nimport MenuStore from '../store/MenuStore';\nimport formatDate from '../utility/DateFormatter';\nimport ScoreStore from '../store/ScoreStore';\n\nimport {\n\tNUM_TILES_X,\n\tNUM_TILES_Y,\n\t WHITE_TILE,\n\t BLACK_TILE,\n\t YELLOW_TILE,\n\t\t KEY_A,\n\t\t KEY_S,\n\t\t KEY_D,\n\t\t KEY_F,\n\t\t NUM_DECIMAL_TILE_SEC }\n\t\tfrom '../constants/GameConstants';\n\nclass LevelStore {\n\n\tconstructor(){\n\t\tthis.started = false;\n\t\tthis.won = false;\n\t\tthis.traversed = 0;\n\t\tthis.modeTiles = NUM_TILES_Y;\n\t\tthis.tiles = [];\n\t\tthis.tileOffsetY = 0; //How manyy tiles we want to scroll down\n\t\tthis.username = Storage.username;\n\t\tthis.initializeTiles();\n\t}\n\n\t/*\n\t* Initializes the tile array\n\t*/\n\tinitializeTiles(){\n\t\tfor (let y = 0; y < (this.modeTiles + 4); y++){\n\t\t\t//Get a random number between 1 and 4 inclusive\n\t\t\tconst randomNum  = this.random(1,4);\n\n\t\t\t//If we have played a tile\n\t\t\tlet placedBlack = false;\n\n\t\t\t//Number of loops in this cycle\n\t\t\tlet iteration = 0;\n\n\t\t\tfor (let x = 0; x < NUM_TILES_X; x++){\n\t\t\t\t//Where we are currently at\n\t\t\t\titeration++;\n\n\t\t\t\t//Default tile to place\n\t\t\t\tlet tileId = WHITE_TILE;\n\n\t\t\t\t//Place a yellow row at the start and then 5 tiles from the end\n\t\t\t\t//so that we always have 4 white tiles from the end\n\t\t\t\tif (y === 0 || (y === this.modeTiles - 1)){\n\t\t\t\t\ttileId = YELLOW_TILE;\n\t\t\t\t//Place a black tile in the random location if we haven't already placed a tile,\n\t\t\t\t//and the random number equals the current x value, and before the last 4 rows\n\t\t\t} else if (!placedBlack && iteration === randomNum && y < this.modeTiles - 1){\n\t\t\t\t\ttileId = BLACK_TILE;\n\t\t\t\t\tplacedBlack = true;;\n\t\t\t\t}\n\t\t\t\t//Otherwise place a whtie tile\n\t\t\t\tthis.tiles[x + y * NUM_TILES_X] = tileId;\n\t\t\t}\n\t\t}\n\t}\n\n\trandom(min, max){\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\n\t/*\n\t* A computable function that will filter the tiles that we render to the screen\n\t*/\n\tget screenTiles(){\n\t\treturn this.tiles.filter((tile, id) => {\n\t\t\tconst screenStart = this.tileOffsetY * NUM_TILES_X;\n\t\t\tconst screenEnd = ((this.tileOffsetY + 4) * NUM_TILES_X - 1); //-1 because we start at 0\n\t\t\t\tif (id >= screenStart && id <= screenEnd)\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t});\n\t}\n\n\thandleClick(e){\n\t\tconsole.log(e.target);\n\t\tif (this.validClick(e.target.id)){\n\t\t\t//If we haven't started, then start and turn on the timer\n\t\t\tif (!this.started){\n\t\t\t\tTimerStore.start();\n\t\t\t\tthis.started = true;\n\t\t\t}\n\t\t\tif (!this.mouseCheckWhiteTile(e.target.id)){\n\t\t\t\tthis.tileOffsetY++;\n\t\t\t\tif (this.tileOffsetY === this.modeTiles)\n\t\t\t\t\tthis.endGame(true);\n\t\t\t} else {\n\t\t\t\tthis.endGame(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t//If it's a white tile - then we lost\n\tmouseCheckWhiteTile(id){\n\t\tif (id.startsWith(\"white\")) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/*\n\t* Make sure we only accept input for the bottom 4 tiles on the screen\n\t*/\n\tvalidClick(id){\n\t\tconsole.log(id);\n\t\tif(id.includes(\"12\") || id.includes(\"13\") || id.includes(\"14\") || id.includes(\"15\")){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\thandleKeyPress(code){\n\t\tif (!this.started){\n\t\t\tTimerStore.start();\n\t\t\tthis.started = true;\n\t\t}\n\t\tif (!this.keyCheckWhiteTile(code)){\n\t\t\tthis.tileOffsetY++;\n\t\t\t//We want to stop on the 4th to last row so we always render 3 white tiles\n\t\t\tif (this.tileOffsetY === this.modeTiles)\n\t\t\t\tthis.endGame(true);\n\t\t} else {\n\t\t\tthis.endGame(false);\n\t\t}\n\t}\n\n\tkeyCheckWhiteTile(code){\n\t\t switch(code){\n\t\t\tcase KEY_A:\n\t\t\t\tif (this.tiles[(this.tileOffsetY * 4) + 3] === WHITE_TILE)\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\tcase KEY_S:\n\t\t\t\tif (this.tiles[(this.tileOffsetY * 4) + 2]  === WHITE_TILE)\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\tcase KEY_D:\n\t\t\t\tif (this.tiles[(this.tileOffsetY * 4) + 1]  === WHITE_TILE)\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\tcase KEY_F:\n\t\t\t\tif (this.tiles[this.tileOffsetY * 4]  === WHITE_TILE)\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\t}\n\t}\n\n\tget tilesPerSecond(){\n\t\treturn (this.tileOffsetY / TimerStore.elapsed).toFixed(NUM_DECIMAL_TILE_SEC);\n\t}\n\n\tget whiteTiles(){\n\t\treturn Storage.stats.whiteTiles;\n\t}\n\n\tget blackTiles(){\n\t\treturn Storage.stats.blackTiles;\n\t}\n\n\tget totalTiles(){\n\t\treturn this.whiteTiles + this.blackTiles;\n\t}\n\n\tget totalCompletedGames(){\n\t\treturn Storage.stats.gamesCompleted;\n\t}\n\n\tget totalPlayedGames(){\n\t\treturn Storage.stats.gamesPlayed;\n\t}\n\n\tendGame(win){\n\t\tTimerStore.stop();\n\t\tMenuStore.currentMenu = \"gameover\";\n\t\tif (win)\n\t\t\tthis.win();\n\t\telse\n\t\t\tthis.lose();\n\t}\n\n\tincreaseStats(win, blackTiles){\n\t\tStorage.stats.gamesPlayed++;\n\t\tStorage.stats.blackTiles += blackTiles;\n\t\tif (!win)\n\t\t\tStorage.stats.whiteTiles++;\n\t\telse\n\t\t\tStorage.stats.gamesCompleted++;\n\t}\n\n\twin(){\n\t\tthis.increaseStats(true, this.tileOffsetY);\n\t\tthis.won = true;\n\t\tScoreStore.pushScore(formatDate(), this.username, TimerStore.elapsed, this.modeTiles);\n\t}\n\n\tlose(){\n\t\tthis.increaseStats(false, this.tileOffsetY);\n\t\tthis.won = false;\n\t}\n\n\treset(){\n\t\tStorage.saveStatsToStorage();\n\t\tTimerStore.reset();\n\t\tthis.started = false;\n\t\tthis.won = false;\n\t\tthis.tileOffsetY = 0;\n\t\tthis.initializeTiles();\n\t}\n}\n\ndecorate(LevelStore, {\n\tmodeTiles: observable,\n\ttileOffsetY: observable,\n\tscreenTiles: computed\n})\n\nconst levelStore = window.levelStore = new LevelStore();\n\nexport default levelStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rectangle = props => {\n\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n    },\n    rectangle: {\n      fill: props.color,\n      strokeWidth: 2,\n      stroke: '#000000'\n    },\n  };\n\n  return (\n    <svg\n      style={styles.svg}\n      width={`${props.width}px`}\n      height={`${props.height}px`}\n      draggable={false}\n      viewBox=\"0 0 64 128\"\n      onClick={props.mouse}>\n\t    <rect id={props.id} width={`${props.width}px`} height={`${props.height}px`} style={styles.rectangle}/>\n    </svg>\n  );\n};\n\nRectangle.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  color: PropTypes.string,\n};\n\nRectangle.defaultProps = {\n  width:64,\n  height:128,\n};\n\nexport default Rectangle;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport LevelStore from '../store/LevelStore';\n\nimport { BLACK_TILE, WHITE_TILE, YELLOW_TILE} from '../constants/GameConstants';\nimport Rectangle from './Rectangle';\n\nclass Tiles extends Component {\n\n\trenderTiles(){\n\t\t//To do - change so we don't have to reverse on each time - reverse on array initalization\n\t\tconst reversed = LevelStore.screenTiles.reverse(); //Reverse because we want to render top to bottom\n\t\treturn reversed.map((tile, i) => {\n\t\t\tswitch(tile){\n\t\t\t\tcase WHITE_TILE:\n\t\t\t\t\treturn <Rectangle key = { i } id = { \"white-\" + i } color = \"white\" mouse={ (e) => { LevelStore.handleClick(e) }}/>\n\t\t\t\tcase BLACK_TILE:\n\t\t\t\t\treturn <Rectangle key = { i } id = { \"black-\" + i } color = \"black\" mouse={ (e) => { LevelStore.handleClick(e) }}/>\n\t\t\t\tcase YELLOW_TILE:\n\t\t\t\t\treturn <Rectangle key = { i } id = { \"yellow-\" + i } color = \"yellow\" mouse={ (e) => { LevelStore.handleClick(e) }}/>\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t});\n\t}\n\n\trender(){\n\t\treturn(\n  \t\t<div className=\"Tiles flex flex-wrap\" style={{width: '256px', height:'512px'}}>\n        { this.renderTiles() }\n  \t\t</div>\n    );\n\t}\n}\n\nexport default observer(Tiles);\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport LevelStore from '../store/LevelStore';\nimport TimerStore from '../store/TimerStore';\nimport Tiles from './Tiles';\n\nimport '../css/Play.css';\n\nimport { KEY_A,\n\t\t KEY_S,\n\t\t KEY_D,\n\t\t KEY_F }\n\t\tfrom '../constants/GameConstants';\n\nclass Play extends Component {\n\n\t//We add this piece so that the component will focus after it is rerendered\n  componentDidMount() {\n    this.input.focus();\n  }\n\n  handleKeyPress(code){\n    if (code === KEY_A || code === KEY_S || code === KEY_D || code === KEY_F){\n      LevelStore.handleKeyPress(code);\n\t\t}\n  }\n\n\trender(){\n\t\treturn(\n  \t\t<div className=\"Play\" onKeyPress={(e) => {this.handleKeyPress(e.charCode)}} tabIndex=\"0\" ref={(node) => this.input = node}>\n  \t\t\t<div className=\"Play__tiles flex justify-center items-center h-100\">\n  \t\t\t\t<Tiles/>\n  \t\t\t</div>\n  \t\t\t<div className=\"Play__timer\">\n  \t\t\t\t<div className=\"Play__timer-text tr mt2 f3 dark-red\">\n  \t\t\t\t { TimerStore.elapsed }s\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \t\t</div>\n    );\n\t}\n}\n\nexport default observer(Play);\n","import React, { Component } from 'react';\n\nimport MenuStore from '../store/MenuStore';\nimport LevelStore from '../store/LevelStore';\n\nclass BackButton extends Component {\n\n  reset(retry){\n      LevelStore.reset();\n      if (retry)\n        MenuStore.currentMenu = \"play\";\n      else\n        MenuStore.currentMenu = \"home\";\n  }\n\n  render(){\n    return(\n  \t\t<div className=\"BackButton flex justify-center\" style={ this.props.style }>\n  \t\t\t<button className=\"bg-color--none outline--none bw0 dim f4\"\n         onClick={ ()=>{ this.reset(this.props.retry) }}>{ this.props.retry ? \"Retry\" : \"Back\"}</button>\n  \t\t</div>\n    );\n  }\n}\n\nexport default BackButton;\n","import React from 'react';\n\nimport BackButton from './BackButton';\nimport LevelStore from '../store/LevelStore';\n\nconst Statistics = () => {\n\treturn(\n\t\t<div className=\"Statistics flex flex-column justify-center\">\n\t\t\t<div className=\"Statistics__title tc f2-ns f3 b mt5\">Statistics</div>\n\t\t\t\t<div className=\"Statistics__stats flex justify-between\">\n\t\t\t\t<ul className=\"Statistics__label list p01 dib list--ml0\">\n\t\t\t\t\t<li className=\"f4 mb2\">Total Tiles Traversed</li>\n\t\t\t\t\t<li className=\"f4 mb2\">Black Tiles Traversed</li>\n\t\t\t\t\t<li className=\"f4 mb2\">White Tiles Tapped</li>\n\t\t\t\t\t<li className=\"f4 mb2\">Games Played</li>\n\t\t\t\t\t<li className=\"f4 mb2\">Games Completed</li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"Statistics__stat list p01 dib ml4 tr\">\n\t\t\t\t\t<li className=\"f4 b mb2\">{LevelStore.totalTiles}</li>\n\t\t\t\t\t<li className=\"f4 b mb2\">{LevelStore.blackTiles}</li>\n\t\t\t\t\t<li className=\"f4 b mb2\">{LevelStore.whiteTiles}</li>\n\t\t\t\t\t<li className=\"f4 b mb2\">{LevelStore.totalPlayedGames}</li>\n\t\t\t\t\t<li className=\"f4 b mb2\">{LevelStore.totalCompletedGames}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<BackButton style={{marginTop: '6.5rem'}}/>\n\t\t</div>\n\t);\n}\n\nexport default Statistics;\n","import React from 'react';\n\nconst Score = props => {\n  return (\n    <div className={\"Score mv2 \" + props.class}>\n      <div className=\"Score__date f4 fl w-third tc\">{props.date}</div>\n      <div className=\"Score__name f4 fl w-third tc\">{props.name}</div>\n      <div className=\"Score__time f4 fl w-third tc\">{props.time}s</div>\n    </div>\n  );\n}\n\nexport default Score;\n","import React, { Component } from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport BackButton from './BackButton';\nimport ScoreStore from '../store/ScoreStore';\n\nimport Score from './Score';\n\nclass Scores extends Component {\n\n\tcomponentDidMount(){\n\t\t\tScoreStore.fetchScores();\n\t}\n\n\trenderScores(){\n\t\t\tlet scoreArray = [];\n\t\t\tfor (let i = 0; i < ScoreStore.scores.length; i++) {\n\t\t\t\tconst { username, date, time } = ScoreStore.scores[i];\n\t\t\t\tlet className = \"\";\n\t\t\t\tif (i % 2 === 1)\n\t\t\t\t\tclassName = \"bg-color--4\";\n\t\t\t\tscoreArray.push(<Score key={i} class={className} name={username} date={date} time={time}/>);\n\t\t\t}\n\t\t\treturn scoreArray;\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"Scores\" style={{width: '320px'}}>\n\t\t\t\t<div className=\"Scores__title tc f2 b mt5 pr3\">Scores</div>\n\t\t\t\t<div style={{overflowY: 'scroll', height: '325px', paddingRight: '20px'}}>\n\t\t\t\t\t<div className='Scores__header'>\n\t\t\t\t\t\t<div className=\"Scores__name fl w-third pa2 b f3 tc\">Date</div>\n\t\t\t\t\t\t<div className=\"Score__date fl w-third pa2 b f3 tc\">Name</div>\n\t\t\t\t\t\t<div className=\"Score__time fl w-third pa2 b f3 tc\">Time</div>\n\t\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ this.renderScores() }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Scores__options pr4\">\n\t\t\t\t\t<div className=\"Scores__ten fl w-third pa2 f3 tr\" onClick={ () => { ScoreStore.fetchScores(10) }}>10</div>\n\t\t\t\t\t<div className=\"Score__fifty fl w-third pa2 f3 tc\" onClick={ () => { ScoreStore.fetchScores(50) }}>50</div>\n\t\t\t\t\t<div className=\"Score__thousand fl w-third pa2 f3 tl\" onClick={ () => { ScoreStore.fetchScores(1000) }}>1000</div>\n\t\t\t\t\t<div className=\"clear\"></div>\n\t\t\t\t\t<BackButton/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default observer(Scores);\n","import React, { Component } from 'react';\nimport {observer} from 'mobx-react';\n\nimport BackButton from './BackButton';\nimport LevelStore from '../store/LevelStore';\nimport Storage from '../utility/Storage';\n\nimport '../css/Options.css';\n\n\nclass Options extends Component {\n\n\thandleUserChange(e){\n\t\tLevelStore.username = e.target.value\n\t\tStorage.saveUsernameToStorage(e.target.value);\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"Options\" style={{width: '320px'}}>\n\t\t\t\t<div className=\"Options__title tc f2 b mt5\">Options</div>\n\t\t\t\t<ul className=\"f4 list mt3\">\n\t\t\t\t\t<li className=\"Options__select tc\">Tiles\n\t\t\t\t\t\t<select name=\"tile-select\" className=\"ml2 h2 bg-color--black-t1 bn outline--none\n\t\t\t\t\t\ttlc dropdown-none\" value={LevelStore.modeTiles} onChange={ (e) => {\n\t\t\t\t\t\t\t\tLevelStore.modeTiles = parseInt(e.target.value);\n\t\t\t\t\t\t\t} }>\n\t\t\t\t\t\t\t<option value=\"10\">10</option>\n\t\t\t\t\t\t\t<option value=\"50\">50</option>\n\t\t\t\t\t\t\t<option value=\"1000\">1000</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"mode-select color--1a f6 tc\">How many tiles you will have to traverse to reach the end</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"Options__username flex justify-center\">\n\t\t\t\t\tUsername <input type=\"text\" className=\"Options__field-username ml2 bg-color--black-t1\" placeholder=\"New User\" defaultValue={ LevelStore.username } onChange={(e) => { this.handleUserChange(e) }} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Options__username-description color--1a f6 tc\">The username that will appear on the score menu</div>\n\t\t\t\t<BackButton style={{marginTop: '6rem'}}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default observer(Options);\n","import React from 'react';\n\nimport Title from './Title';\nimport BackButton from './BackButton';\n\nconst About = () => {\n\treturn(\n\t\t<div className=\"About\"  style={{width: '320px'}}>\n\t\t\t<Title/>\n\t\t\t<div className=\"About__instructions pa3\">\n\t\t\t\t<div className=\"About__instructions-title tc b mb1 f3\">Instructions</div>\n\t\t\t\t<div className=\"About__instructions-body tc f4\">Navigate through 50 black tiles using ASDF without stepping on a white tile</div>\n\t\t\t</div>\n\t\t\t<div className=\"About__scoring pa3\">\n\t\t\t\t<div className=\"About__scoring-title tc b mb1 f3\">Scoring</div>\n\t\t\t\t<div className=\"About__scoring-body tc f4\">Your score is determined by how fast you can traverse the tiles</div>\n\t\t\t</div>\n\t\t\t<div className=\"About__copyright pa3\">\n\t\t\t\t<div className=\"About__copyright-name tc b f4\">Made by Trey Wallis\n\t\t\t\t\t<div className=\"f5 mt2\">Contributions by James Reis</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"About__version mt2 tc f5\">Version 2.0.0</div>\n\t\t\t</div>\n\t\t\t<BackButton style={{marginTop: '2rem'}}/>\n\t\t</div>\n\t);\n}\n\nexport default About;\n","import React from 'react';\n\nimport Title from './Title';\nimport BackButton from './BackButton';\nimport LevelStore from '../store/LevelStore';\nimport TimerStore from '../store/TimerStore';\n\nconst GameOver = () => {\n\t\treturn (\n\t\t\t<div className=\"GameOver\">\n\t\t\t\t<Title/>\n\t\t\t\t{\n\t\t\t\t\t!LevelStore.won ?\n\t\t\t\t\t\t(<div className=\"GameOver__text\">\n\t\t\t\t\t\t\t<div className=\"GameOver__first mt5 tc f3-ns f4 b\">Failure<br/> Better luck next time</div>\n\t\t\t\t\t\t\t<div className=\"GameOver__score mt3 tc f4-ns f5\">\n\t\t\t\t\t\t\t\tYou survived { TimerStore.elapsed }s <br/>\n\t\t\t\t\t\t\t\tand traversed { LevelStore.tileOffsetY } tile{ LevelStore.tileOffsetY === 1 ? \"\" : \"s\" }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t:(<div className=\"GameOver__text\">\n\t\t\t\t\t\t\t<div className=\"GameOver__first mt5 tc f3-ns f4\">Congrats</div>\n\t\t\t\t\t\t\t<div className=\"GameOver__second mt3 tc f2-ns f3 b\">{ TimerStore.elapsed }s</div>\n\t\t\t\t\t\t\t<div className=\"GameOver__third tc f3-ns f4 b\">\n\t\t\t\t\t\t\t\t{ LevelStore.tilesPerSecond } tiles per second <br/>\n\t\t\t\t\t\t\t\t{ LevelStore.tileOffsetY } tile{ LevelStore.tileOffsetY === 1 ? \"\" : \"s\" } traversed\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t  </div>)\n\t\t\t\t}\n\t\t\t\t<BackButton retry={true} style={{marginTop: '2rem'}}/>\n\t\t\t\t<BackButton style={{marginTop: '0.5rem'}}/>\n\t\t\t</div>\n\t);\n}\n\nexport default GameOver;\n","import React from 'react';\nimport { observable, computed, decorate } from 'mobx';\n\nimport Home from '../components/Home';\nimport Play from '../components/Play';\nimport Statistics from '../components/Statistics';\nimport Scores from '../components/Scores';\nimport Options from '../components/Options';\nimport About from '../components/About';\nimport GameOver from '../components/GameOver';\n\nclass MenuStore {\n\n  constructor(){\n    this.currentMenu = \"home\";\n  }\n\n  get renderMenu(){\n    switch(this.currentMenu){\n      case \"play\":\n        return <Play/>\n      case \"options\":\n        return <Options/>\n      case \"about\":\n        return <About/>\n      case \"scores\":\n        return <Scores/>\n      case \"statistics\":\n        return <Statistics/>\n      case \"gameover\":\n        return <GameOver/>\n      default:\n        return <Home/>\n    }\n  }\n}\n\ndecorate(MenuStore, {\n\tcurrentMenu: observable,\n\trenderMenu: computed\n})\n\nconst menuStore = window.menuStore = new MenuStore();\nexport default menuStore;\n","import React from 'react';\n\nimport { observer } from 'mobx-react';\n\nimport MenuStore from '../store/MenuStore';\n\nconst App = () => {\n  return (\n    <div className=\"App vw-100 vh-100 flex justify-center items-center\">\n      { MenuStore.renderMenu }\n    </div>\n  );\n}\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\n\nimport 'tachyons';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root'));\n"],"sourceRoot":""}